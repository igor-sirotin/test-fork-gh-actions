name: "Conventional Commits"

on:
  # pull_request_target:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  main:
    name: Validate format
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.GITHUB_HEAD_REF }}
          fetch-tags: true

      # - name: Fetch tags
      #   run: |
      #     git fetch --tags --quiet
      #     echo "1 - ${{ github.event.pull_request.head.ref }}"
      #     echo "2 - ${{ github.event.pull_request.base.ref }}"
      #     echo "3 - ${{ env.GITHUB_HEAD_REF }}"
      #     echo "4 - origin/${GITHUB_HEAD_REF}"
      #     git checkout ${{ github.event.pull_request.head.ref }}


      - name: Check commit message
        id: check_commit_message
        if: always()
        run: |
          set +e

          output=$(./check_commit.sh 2>&1)
          exit_code=$?
          
          has_breaking_changes=$(echo "${output}" | tail -n 1)
          echo "${output}"
          echo "has_breaking_changes=${has_breaking_changes}"
          echo "exit_code=${exit_code}"
          
          echo "exit_code=${exit_code}" >> $GITHUB_OUTPUT
          echo "has_breaking_changes=${has_breaking_changes}" >> $GITHUB_OUTPUT
          
          invalid_commit_messages=$(echo "${output}" | sed '1d;$d')
          invalid_commit_messages=$(echo "${output}" | sed '1d;$d')
          invalid_commit_messages=$(echo "${invalid_commit_messages}" | sed 's/\x1b\[[0-9;]*m//g') # Remove color codes
          invalid_commit_messages=$(echo "${invalid_commit_messages}" | sed 's/^Commit message is ill-formed: //') # Remove prefix
          
          if [[ $exit_code -ne 0 ]]; then
            EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            echo "error_message<<$EOF" >> "$GITHUB_ENV"
            echo "${invalid_commit_messages}" >> "$GITHUB_ENV"
            echo "$EOF" >> "$GITHUB_ENV"
          fi

      - name: "Comment"
        uses: marocchino/sticky-pull-request-comment@v2
        # When the previous steps fails, the workflow would stop. By adding this
        # condition you can continue the execution with the populated error message.
        if: always()
        with:
          header: commit-message-lint-error
          message: |
            Hello, world!
            job id: ${{ github.job }}
            echo "README: $(cat README.md)"

      - name: "Label"
        if: always()
        run: |
          echo "GH_REPO=${GH_REPO}"
          echo "NUMBER=${NUMBER}"
          gh issue edit "$NUMBER" --add-label "breaking change"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.pull_request.number }}
